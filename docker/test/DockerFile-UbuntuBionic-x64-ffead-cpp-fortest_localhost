FROM buildpack-deps:bionic

ENV DEBIAN_FRONTEND noninteractive
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

RUN apt-get -yqq update > /dev/null
RUN apt-get -yqq install locales autoconf-archive autoconf automake libtool gcc g++ cmake unzip libpcre3-dev zlib1g-dev \
	libpq-dev libssl-dev uuid-dev odbc-postgresql unixodbc unixodbc-dev libcurl4-openssl-dev libmemcached-dev wget netcat \
	memcached redis-server gdb ninja-build telnet net-tools vim

#Install libcuckoo headers
WORKDIR /tmp
RUN wget -q https://github.com/efficient/libcuckoo/archive/master.zip
RUN unzip -qq master.zip
RUN rm -f master.zip
WORKDIR /tmp/libcuckoo-master
RUN cmake -DCMAKE_INSTALL_PREFIX=/usr/local/ .
RUN make install
WORKDIR /tmp
RUN rm -rf /tmp/libcuckoo-master

RUN wget -q https://github.com/redis/hiredis/archive/v1.0.0.tar.gz
RUN tar xf v1.0.0.tar.gz
RUN rm -f v1.0.0.tar.gz
RUN cd hiredis-1.0.0/ && cmake . && make install
WORKDIR /tmp
RUN rm -rf hiredis-1.0.0

RUN wget -q https://github.com/sewenew/redis-plus-plus/archive/refs/tags/1.3.3.tar.gz
RUN tar xf 1.3.3.tar.gz
RUN rm -f 1.3.3.tar.gz
WORKDIR redis-plus-plus-1.3.3/
RUN mkdir build
WORKDIR build
RUN cmake -DREDIS_PLUS_PLUS_CXX_STANDARD=17 .. && make && make install
WORKDIR /tmp
RUN rm -rf redis-plus-plus-1.3.3

#Install mongodb c driver
RUN wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.2/mongo-c-driver-1.4.2.tar.gz
RUN tar xf mongo-c-driver-1.4.2.tar.gz
RUN rm -f mongo-c-driver-1.4.2.tar.gz
RUN cd mongo-c-driver-1.4.2/ && ./configure --disable-automatic-init-and-cleanup --disable-tests --disable-ssl --disable-sasl && make && make install
WORKDIR /tmp
RUN rm -rf mongo-c-driver-1.4.2

WORKDIR /tmp
RUN wget -q https://github.com/axboe/liburing/archive/liburing-0.7.tar.gz
RUN tar xf liburing-0.7.tar.gz
RUN rm -f liburing-0.7.tar.gz
RUN cd liburing-liburing-0.7 && ./configure --prefix=/usr/local && make install
RUN cd /tmp && rm -rf liburing-liburing-0.7

#Install ffead-cpp
WORKDIR /tmp
RUN wget -q https://github.com/sumeetchhetri/ffead-cpp/archive/master.zip
RUN unzip -qq master.zip
RUN mv ffead-cpp-master ffead-cpp-src
RUN rm -f master.zip

RUN apt remove -yqq libpq-dev
RUN apt autoremove -yqq
RUN rm -f /usr/local/lib/libpq.* /usr/lib/x86_64-linux-gnu/libpq.*
RUN apt update && apt install -y bison flex libreadline-dev
WORKDIR /tmp
RUN wget -nv https://github.com/postgres/postgres/archive/514b4c11d24701d2cc90ad75ed787bf1380af673.zip
RUN unzip -q 514b4c11d24701d2cc90ad75ed787bf1380af673.zip
WORKDIR /tmp/postgres-514b4c11d24701d2cc90ad75ed787bf1380af673
#RUN wget -nv https://www.postgresql.org/message-id/attachment/115223/v22-0001-libpq-batch.patch
#RUN git apply ./v22-0001-libpq-batch.patch
RUN ./configure --prefix=/usr CFLAGS='-O3 -march=native -flto'
WORKDIR src/interfaces/libpq
RUN make all install -j4
RUN cp ../../../src/include/postgres_ext.h ../../../src/include/pg_config_ext.h libpq-fe.h /usr/include

WORKDIR /tmp/ffead-cpp-src
RUN rm -rf src web rtdcf script
COPY src /tmp/ffead-cpp-src/src
COPY web /tmp/ffead-cpp-src/web
COPY rtdcf /tmp/ffead-cpp-src/rtdcf
COPY script /tmp/ffead-cpp-src/script
COPY CMakeLists.txt /tmp/ffead-cpp-src/
RUN sed -i 's|add_subdirectory(${PROJECT_SOURCE_DIR}/web/default)||g' CMakeLists.txt && \
	sed -i 's|add_subdirectory(${PROJECT_SOURCE_DIR}/web/flexApp)||g' CMakeLists.txt && \
	sed -i 's|add_subdirectory(${PROJECT_SOURCE_DIR}/web/oauthApp)||g' CMakeLists.txt && \
	sed -i 's|add_subdirectory(${PROJECT_SOURCE_DIR}/web/markers)||g' CMakeLists.txt && \
	sed -i 's|add_subdirectory(${PROJECT_SOURCE_DIR}/web/te-benchmark)||g' CMakeLists.txt && \
	sed -i 's|add_subdirectory(${PROJECT_SOURCE_DIR}/web/peer-server)||g' CMakeLists.txt && \
	sed -i 's|install(FILES ${PROJECT_BINARY_DIR}/web/default/libdefault${LIB_EXT} DESTINATION ${PROJECT_NAME}-bin/lib)||g' CMakeLists.txt && \
	sed -i 's|install(FILES ${PROJECT_BINARY_DIR}/web/flexApp/libflexApp${LIB_EXT} DESTINATION ${PROJECT_NAME}-bin/lib)||g' CMakeLists.txt && \
	sed -i 's|install(FILES ${PROJECT_BINARY_DIR}/web/oauthApp/liboauthApp${LIB_EXT} DESTINATION ${PROJECT_NAME}-bin/lib)||g' CMakeLists.txt && \
	sed -i 's|install(FILES ${PROJECT_BINARY_DIR}/web/markers/libmarkers${LIB_EXT} DESTINATION ${PROJECT_NAME}-bin/lib)||g' CMakeLists.txt && \
	sed -i 's|install(FILES ${PROJECT_BINARY_DIR}/web/te-benchmark/libte-benchmark${LIB_EXT} DESTINATION ${PROJECT_NAME}-bin/lib)||g' CMakeLists.txt && \
	sed -i 's|install(FILES ${PROJECT_BINARY_DIR}/web/peer-server/libpeer-server${LIB_EXT} DESTINATION ${PROJECT_NAME}-bin/lib)||g' CMakeLists.txt && \
	rm -rf web/default web/oauthApp web/flexApp web/markers web/te-benchmark web/peer-server

RUN mkdir build
WORKDIR /tmp/ffead-cpp-src/build
RUN cmake -GNinja -DSRV_EMB=on -DMOD_MEMCACHED=on -DMOD_REDIS=on -DMOD_SDORM_MONGO=on -DDEBUG=on ..
RUN ninja install && \
	cp -f /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t2/config/cacheredis.xml /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t2/config/cache.xml && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t3 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t4 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t5 && \
	mv /tmp/ffead-cpp-src/ffead-cpp-6.0-bin /tmp/ffead-cpp-mongo-raw

WORKDIR /tmp/ffead-cpp-src/build
RUN ninja install && \
	cp -f /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/sdormmongo.xml /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/sdorm.xml && \
	cp -f /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/cacheredis.xml /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/cache.xml && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t3 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t4 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t5 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t2 && \
	mv /tmp/ffead-cpp-src/ffead-cpp-6.0-bin /tmp/ffead-cpp-mongo-orm

WORKDIR /tmp/ffead-cpp-src/build
RUN ninja install && \
	cp -f /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t3/config/cacheredis.xml /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t3/config/cache.xml && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t2 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t4 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t5 && \
	mv /tmp/ffead-cpp-src/ffead-cpp-6.0-bin /tmp/ffead-cpp-sql-raw

WORKDIR /tmp/ffead-cpp-src/build
RUN cp -f /tmp/ffead-cpp-src/web/t1/sql-src/TeBkUmWorldsql.h /tmp/ffead-cpp-src/web/t1/include/TeBkUmWorld.h && \
	cp -f /tmp/ffead-cpp-src/web/t1/sql-src/TeBkUmWorldsql.cpp /tmp/ffead-cpp-src/web/t1/src/TeBkUmWorld.cpp && \
	ninja install && \
	cp -f /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/sdormpostgresql.xml /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/sdorm.xml && \
	cp -f /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/cacheredis.xml /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1/config/cache.xml && \
	cp /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/resources/sample-odbcinst.ini /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/resources/odbcinst.ini && \
	cp /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/resources/sample-odbc.ini /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/resources/odbc.ini && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t3 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t4 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t5 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t2 && \
	mv /tmp/ffead-cpp-src/ffead-cpp-6.0-bin /tmp/ffead-cpp-sql-orm

WORKDIR /tmp/ffead-cpp-src/build
RUN ninja install && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t1 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t3 && \
	rm -rf /tmp/ffead-cpp-src/ffead-cpp-6.0-bin/web/t2 && \
	mv /tmp/ffead-cpp-src/ffead-cpp-6.0-bin /tmp/ffead-cpp-sql-raw-async

COPY *.sh /

WORKDIR /

RUN chmod +x *.sh

CMD /bin/bash
